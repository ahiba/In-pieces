/**
 * Created by Moudi on 2017/2/25.
 */
@import "reset.css";
//变量区
@import "var.scss";
//keyframes
@import "animation.scss";
//额外碎片的代码
@import "extraPieces.scss";
//过程动画
@import "state-animation.scss";
//shadow
@import "shadow.scss";
//loading 页面
@import "loader.scss";

@font-face {
  font-family: 'BlocExtCond';
  src: url("../fonts/blocextcond.eot");
  src: url("../fonts/blocextcond.eot?#iefix") format("embedded-opentype"), url("../fonts/blocextcond.woff") format("woff"), url("../fonts/blocextcond.ttf") format("truetype");
  font-weight: normal;
  font-style: normal;
}

body,
html {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  transition: .5s;
  background: map-get($bg, startup);
  font-family: 'BlocExtCond', "Helvetica Neue", Helvetica, Arial, sans-serif;
  letter-spacing: 2px;
  overflow: hidden;
  -webkit-font-smoothing: antialiased;
  text-transform: uppercase;
}

@each $color-name, $color in $bg {
  body.#{$color-name} {
    background-color: $color;
  }
}

body.preloader,
body.preAni {
  #show-stage {
    background: transparent;
  }
}

#show-stage {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  margin: auto;
  max-width: 650px;
  max-height: 430px;
  transition: 2s;
  .wrapper {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
  .pieces {
    width: 100%;
    height: 100%;
    transition-duration: 0.9s;
    transition-timing-function: cubic-bezier(0.37, -0.29, 0, 1.29); //cubic-bezier(0.62, 0.02, 0.34, 1)
  }
  &.fly {
    animation: fly 3s infinite;
  }
  &.fish-l {
    animation: fish-l 8s infinite;
  }
  &.fish-r {
    animation: fish-r 8s infinite;
  }
}

.main #show-stage {
  background: -webkit-radial-gradient(center center, 230px 230px, rgba(255, 255, 255, .6), rgba(255, 255, 255, 0));
}

.wrapper {
  z-index: 2;
}

.extra {
  z-index: 1;
  .pieces {
    -webkit-clip-path: polygon(50% 50%, 50% 50%, 50% 50%);
    clip-path: polygon(50% 50%, 50% 50%, 50% 50%);
  }
}

.shadow {
  position: absolute;
  bottom: 10%;
  left: 30%;
  background-image: radial-gradient(closest-side, rgba(0, 0, 0, 0.35) 0, rgba(0, 0, 0, 0.14) 35%, transparent 100%);
  width: 50%;
  height: 5%;
  transition: .6s cubic-bezier(1, 0.3, 0.3, 1) .6s;
  opacity: 0;
  &::before, &::after {
    content: "";
    position: absolute;
    bottom: 0;
    left: 0;
    height: 100%;
    width: 50%;
    background-image: radial-gradient(closest-side, rgba(0, 0, 0, 0.38) 0, rgba(0, 0, 0, 0.185) 35%, transparent 100%);
    transition: .6s cubic-bezier(1, 0.3, 0.3, 1) .6s;
  }
  &::before {
    left: 30%
  }
  &::after {
    left: -37%;
    height: 60%;
    bottom: 20%;
  }
}

//遍历所有动物的形状及基础颜色
@each $name, $p in $path {
  @for $i from 1 through 30 {
    body.#{$name} .wrapper:nth-of-type(#{$i}) .pieces {
      -webkit-clip-path: polygon(nth(map_get($path, $name), $i));
      clip-path: polygon(nth(map_get($path, $name), $i));
      background-color: nth(map_get($color, $name), $i);
      transition-delay: $i * 0.04s;
    }
  }
}